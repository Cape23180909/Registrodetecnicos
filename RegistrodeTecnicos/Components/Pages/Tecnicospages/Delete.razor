@page "/Tecnico/Delete/TecnicoId={TecnicoId:int}"
@inject TecnicoService tecnicoService
@inject NavigationManager navigationManager
@inject TiposTecnicoService tiposTecnicoService
@rendermode InteractiveServer

<PageTitle>Eliminar Técnico</PageTitle>

<div class="container">
    <div class="card shadow-header">
        <div class="card-header bg-primary text-white text-center py-2 rounded">
            <h3><strong>Eliminar Técnico</strong></h3>
        </div>

        <Toasts class="p-3" Messages="MensajeToast" Placement="ToastsPlacement.TopRight" />

        <div class="card-header">
            <h3 class="text-danger">¿Estás seguro de que quieres eliminar este técnico?</h3>
        </div>

        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="card shadow-lg">
                        <div class="card-header">
                            <h3 class="text-center"><strong>Datos del técnico</strong></h3>
                        </div>
                        <div class="card-body">
                            <div class="border-primary border-2 borde">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-8">
                                            <ul class="list-unstyled">
                                                <li><strong>TécnicoId:</strong> @tecnico.TecnicoId</li>
                                                <li><strong>Nombre:</strong> @tecnico.Nombre</li>
                                                <li><strong>SueldoHora:</strong> @tecnico.Sueldohora</li>
                                                <li><strong>Tipo Técnico:</strong> @tipoDescripcion</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-footer">
            <button type="button" class="btn btn-outline-danger" @onclick="EliminarPrioridad"><i class="bi bi-trash-fill"></i> Eliminar</button>
            <button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-box-arrow-left"></i> Volver</button>
        </div>
    </div>
</div>

@if (tecnico == null)
{
    <p>Técnico no encontrado.</p>
}

@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos? tecnico { get; set; } = new Tecnicos();
    List<ToastMessage> MensajeToast = new List<ToastMessage>();
    public string tipoDescripcion { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (TecnicoId != 0)
        {
            tecnico = await tecnicoService.Buscar(TecnicoId);
            if (tecnico != null)
            {
                var tipo = await tiposTecnicoService.Buscar(tecnico.TipoId);
                tipoDescripcion = tipo?.Descripcion ?? "Tipo no encontrado";
            }
        }
    }

    public async Task EliminarPrioridad()
    {
        if (TecnicoId == 0 || tecnico == null)
        {
            return;
        }

        if (await tecnicoService.Eliminar(TecnicoId))
        {

            Mensaje(ToastType.Success, "El  tecnico se a Eliminado correctamente.");
        }
    }

    public async Task Volver()
    {
        navigationManager.NavigateTo("/Tecnico/index");
    }

    private ToastMessage CreateToastMessage(ToastType toastType, string mensaje)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Notificación",
            HelpText = $"{DateTime.Now}",
            Message = mensaje,
        };

    private async Task Mensaje(ToastType toastType, string mensaje)
    {
        MensajeToast.Add(CreateToastMessage(toastType, mensaje));
    }
}
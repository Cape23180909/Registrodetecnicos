@page "/TipoTecnico/Create"
@inject NavigationManager navigationManager
@inject TiposTecnicoService tipotecnicoService
@rendermode InteractiveServer

<PageTitle>Registro de TiposTecnicos</PageTitle>

<EditForm Model="tecnico" OnValidSubmit="Guardar" formname="crearTipoTecnicoForm">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header bg-primary text-white text-center py-2 rounded">
            <h3><i class="fas fa-clipboard-list"></i> Registro de tipoTécnicos</h3>
        </div>
        <div class="card-body">
            <!-- TipoId -->
            <div class="form-group">
                <label for="TipoId">TipoId</label>
                <InputNumber id="TipoId" class="form-control" @bind-Value="tecnico.TipoId" />
                <ValidationMessage For="@(() => tecnico.TipoId)" />
            </div>

            <!-- Descripcion -->
            <div class="form-group">
                <label for="Descripcion">Descripci&oacute;n</label>
                <InputText id="Descripcion" class="form-control" @bind-Value="tecnico.Descripcion" @oninput="()=> mostrarMensajeError = false" />
                @if (mostrarMensajeError)
                {
                    <div class="text-danger">El campo no está lleno.</div>
                }
                <ValidationMessage For="@(() => tecnico.Descripcion)" />
            </div>
            <!-- volver -->
            <div class="text-center">
                <button type="submit" class="btn btn-outline-success ml-2">
                    <span class="bi bi-check-circle-fill"></span> Guardar
                </button>

                <NavLink href="/TipoTecnicos/index" class="btn btn-outline-danger mx-2">
                    <span class="bi bi-arrow-bar-left"></span> Retroceder
                </NavLink>

            </div>
        </div>
        @mensaje
    </div>
</EditForm>

@code {
    private TiposTecnicos tecnico = new TiposTecnicos();
    private bool mostrarMensajeError = false;
    public bool Existe = false;
    public string mensaje;


    private async Task Guardar()
    {
        if (!await Validar())
        {
            mensaje = "Ya existe un tecnico con esa descripcion";
            return;
        }

        var guardo = await tipotecnicoService.Guardar(tecnico);
        if (guardo)
        {
            Nuevo();
            navigationManager.NavigateTo("/TipoTecnicos/index");
        }
    }

    public async Task Nuevo()
    {
        tecnico = new TiposTecnicos();
    }

    //Borrar este metodo ya que esta en el servies
    public async Task<bool> Validar()
    {
        Existe = await tipotecnicoService.Existe(tecnico.TipoId, tecnico.Descripcion);
        return !Existe;
    }
}